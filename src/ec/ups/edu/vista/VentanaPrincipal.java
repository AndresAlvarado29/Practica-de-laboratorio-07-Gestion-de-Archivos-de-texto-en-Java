/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.ups.edu.vista;

import static java.awt.image.ImageObserver.HEIGHT;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ariel
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    JFileChooser ventanaArchivos;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();

        ventanaArchivos = new JFileChooser();
        ventanaArchivos.setDialogTitle("Seleccione el directorio en el que decea guardar el archivo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaTextoIngresado = new javax.swing.JTextArea();
        jLabelEncriptacion = new javax.swing.JLabel();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonEncriptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(188, 43, 64));

        jTextAreaTextoIngresado.setColumns(20);
        jTextAreaTextoIngresado.setRows(5);
        jScrollPane1.setViewportView(jTextAreaTextoIngresado);

        jLabelEncriptacion.setFont(new java.awt.Font("Arial Narrow", 1, 36)); // NOI18N
        jLabelEncriptacion.setText("Encriptacion de un archivo de texto");

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonEncriptar.setText("Encriptar");
        jButtonEncriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncriptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelEncriptacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jButtonLimpiar)
                        .addGap(121, 121, 121)
                        .addComponent(jButtonEncriptar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelEncriptacion, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLimpiar)
                    .addComponent(jButtonEncriptar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEncriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncriptarActionPerformed
        String texto = jTextAreaTextoIngresado.getText();

        //Obtenemos la ruta en la cual el usuario decea guardar el archivo si el textArea no esta vacio
        if (!texto.equals("")) {
            String rutaSeleccionada = seleccionarRuta();

            //Si el usuario selecciono una ruta
            if (rutaSeleccionada != null) {

                //Obtenemos el nombre del archivo ingresado por el usuario
                String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre con el que decea guardar el archivo", "Archivo de Texto", HEIGHT);

                //Si el usuario presiono el boton aceptar
                if (nombre != null) {

                    //Si el usuario ingreso un nombre
                    if (!nombre.equals("")) {

                        //Validamos que tengo la extencion .txt
                        if (nombre.length() > 4) {
                            if (!nombre.substring(nombre.length() - 5).equals(".txt")) {
                                nombre += ".txt";

                            }
                        } else {
                            nombre += ".txt";

                        }

                        //Guardamos el archivo
                        guardarEnTexto(rutaSeleccionada + "/" + nombre, encriptar(texto));
                        jTextAreaTextoIngresado.setText("");

                    } else {
                        JOptionPane.showMessageDialog(this, "Debe ingresar un nombre");

                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Porfavor ingrese el texto que decea encriptar");

        }
    }//GEN-LAST:event_jButtonEncriptarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed

        jTextAreaTextoIngresado.setText("");
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    public String encriptar(String texto) {
        char caracteres[] = texto.toCharArray();

        for (int i = 0; i < caracteres.length; i++) {
            char carcterDesplazado = (char) (caracteres[i] + (char) 3);
            caracteres[i] = carcterDesplazado;

        }
        return String.valueOf(caracteres);
    }

    public void guardarEnTexto(String ruta, String texto) {
        try {
            FileWriter archivoEscritura = new FileWriter(ruta, true);

            BufferedWriter escritura = new BufferedWriter(archivoEscritura);

            escritura.append(texto);
            escritura.close();
            archivoEscritura.close();
            JOptionPane.showMessageDialog(this, "Archivo guardado en: " + ruta);

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "ruta del arcgivo no encontrada");

        } catch (IOException e2) {
            JOptionPane.showMessageDialog(this, "Error de escritura");

        } catch (Exception e3) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al guardar el archivo intentelo de nuevo");

        }
    }

    public String seleccionarRuta() {
        //Creamos el filtro
        ventanaArchivos.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        //Abrimos la ventana y guardamos la opcion seleccionada
        int seleccion = ventanaArchivos.showOpenDialog(this);

        //Si el usuario selecciona aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {

            //Obtenemos el fichero seleccionado
            File fichero = ventanaArchivos.getSelectedFile();

            //Escribimos la ruta seleccionada en el jTextlabel
            return fichero.getAbsolutePath();

        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEncriptar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JLabel jLabelEncriptacion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaTextoIngresado;
    // End of variables declaration//GEN-END:variables
}
